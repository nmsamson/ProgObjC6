{\rtf1\ansi\ansicpg1252\cocoartf1343\cocoasubrtf160
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fmodern\fcharset0 CourierNewPSMT;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\f0\fs24 \cf0 Chapter 2 - Programming in Objective-C - Exercises\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural
\cf0     1.  Type in and run the five program presented in this chapter. Compare the output produced by\
          each program with the output presented after each program.\
\
    2.  Write a program that displays the following text:\
           
\f1 In Objective-C, lowercase letters are significant.
\f0 \
           
\f1 main is where program execution begins.
\f0 \
           
\f1 Open and closed braces enclose program statements in a routine.
\f0 \
           
\f1 All program statements must be terminated by a semicolon.
\f0 \
\
    3.  What output would you expect from the following program?\
           
\f1 #import <Foundation/Foundation.h>
\f0 \
           
\f1 int main (int argc, const char * argv[])
\f0 \
           
\f1 \{
\f0 \
               
\f1 @autoreleasepool \{
\f0 \
                   i
\f1 nt i;
\f0 \
                   
\f1 i = 1;
\f0 \
                   
\f1 NSLog (@\'93Testing\'85\'94);
\f0 \
                   
\f1 NSLog (@\'93\'85.%i\'94, i);
\f0 \
                   
\f1 NSLog (@\'93\'85%i\'94, i + 1);
\f0 \
                   
\f1 NSLog (@\'93..%i\'94, i + 2);
\f0 \
               
\f1 \}
\f0 \
               
\f1 return 0;
\f0 \
           
\f1 \}
\f0 \
\
    4.  Write a program that subtracts the value 15 from 87 and displays the result,\
          together with an appropriate message.\
\
    5.  Identify the syntactic errors in the following program. Then type in and run the corrected\
         program to make sure you have identified all the mistakes:\
           
\f1 #import <Foundation/Foundation.h>
\f0 \
\
           
\f1 int main (int argc, const char *argv[]);
\f0 \
           
\f1 (
\f0 \
               
\f1 @autoreleasepool \{
\f0 \
                   
\f1 INT sum;
\f0 \
                   
\f1 /* COMPUTE RESULT //
\f0 \
                   
\f1 sum = 25 + 37 - 19
\f0 \
                   
\f1 / DISPLAY RESULTS /
\f0 \
                   
\f1 NSLog (@\'91The answer is %i\'92 sum);
\f0 \
               
\f1 \}
\f0 \
               
\f1 return 0;
\f0 \
           
\f1 \}
\f0 \
\
    6.  What output would you expect from the following program?\
           
\f1 #import <Foundation/Foundation.h>
\f0 \
\
           
\f1 int main (int argc, const char *argv[])
\f0 \
           
\f1 \{
\f0 \
               
\f1 @autoreleasepool \{
\f0 \
                   
\f1 int answer, result;
\f0 \
\
                   
\f1 answer = 100;
\f0 \
                   
\f1 result = answer - 10;
\f0 \
\
                   
\f1 NSLog (@\'93The result is %i\\n\'94, result + 5);
\f0 \
               
\f1 \}
\f0 \
               
\f1 return 0;
\f0 \
           
\f1 \}
\f0 \
}